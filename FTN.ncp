<Project>
  <Name>FTN</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Biblioteka</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Book</Name>
        <Access>Public</Access>
        <Location left="365" top="33" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int BookId { get; set; }</Member>
        <Member type="Property">public int AuthorId { get; set; }</Member>
        <Member type="Property">public Author Author { get; set; }</Member>
        <Member type="Property">public string Username { get; set; }</Member>
        <Member type="Property">public Member Member { get; set; }</Member>
        <Member type="Property">public string Title { get; set; }</Member>
        <Member type="Property">public int PublishYear { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Autor</Name>
        <Access>Public</Access>
        <Location left="679" top="33" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int AuthorId { get; set; }</Member>
        <Member type="Property">public string ShortDesc { get; set; }</Member>
        <Member type="Property">public string FirstName { get; set; }</Member>
        <Member type="Property">public string LastName { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Member</Name>
        <Access>Public</Access>
        <Location left="42" top="33" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Username { get; set; }</Member>
        <Member type="Property">public string Password { get; set; }</Member>
        <Member type="Property">public string FirstName { get; set; }</Member>
        <Member type="Property">public string LastName { get; set; }</Member>
        <Member type="Property">public bool IsAdmin { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BookstoreService</Name>
        <Access>Public</Access>
        <Location left="1142" top="324" />
        <Size width="316" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static UserService userService</Member>
        <Member type="Method">public Dictionary&lt;int, Book&gt; GetBooks()</Member>
        <Member type="Method">public bool CreateBook(string title, int publishmentYear, int authorId, string token)</Member>
        <Member type="Method">public bool DeleteBook(Book book, string token)</Member>
        <Member type="Method">public void CloneBook(Book book, string token)</Member>
        <Member type="Method">public bool EditBook(Book book, string token)</Member>
        <Member type="Method">public bool LeaseBook(Book book, string token)</Member>
        <Member type="Method">public bool ReturnBook(Book book, string token)</Member>
        <Member type="Method">public Author CreateAuthor(string firstName, string lastName, string shortDesc, string token)</Member>
        <Member type="Method">public List&lt;Author&gt; GetAuthors()</Member>
        <Member type="Method">public string LogIn(string username, string password)</Member>
        <Member type="Method">public void LogOut(string token)</Member>
        <Member type="Method">public bool CreateUser(string firstName, string lastName, string username, string password, bool admin, string token)</Member>
        <Member type="Method">public bool EditMemberInfo(string firstName, string lastName, string token)</Member>
        <Member type="Method">public Member GetMemberInfo(string token)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IBookStoreService</Name>
        <Access>Public</Access>
        <Location left="723" top="324" />
        <Size width="316" height="299" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateBook(string title, int publishmentYear, int authorId, string token)</Member>
        <Member type="Method">Author CreateAuthor(string firstName, string lastName, string shortDesc, string token)</Member>
        <Member type="Method">bool CreateUser(string firstName, string lastName, string username, string password, bool admin, string token)</Member>
        <Member type="Method">bool DeleteBook(Book book, string token)</Member>
        <Member type="Method">void CloneBook(Book book, string token)</Member>
        <Member type="Method">bool EditBook(Book book, string token)</Member>
        <Member type="Method">Dictionary&lt;int, Book&gt; GetBooks()</Member>
        <Member type="Method">Member GetMemberInfo(string token)</Member>
        <Member type="Method">bool EditMemberInfo(string firstName, string lastName, string token)</Member>
        <Member type="Method">string LogIn(string username, string password)</Member>
        <Member type="Method">void LogOut(string token)</Member>
        <Member type="Method">bool LeaseBook(Book book, string token)</Member>
        <Member type="Method">bool ReturnBook(Book book, string token)</Member>
        <Member type="Method">List&lt;Author&gt; GetAuthors()</Member>
      </Entity>
      <Entity type="Class">
        <Name>DbContext</Name>
        <Access>Public</Access>
        <Location left="1349" top="33" />
        <Size width="162" height="78" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BookstoreDbContext</Name>
        <Access>Public</Access>
        <Location left="1142" top="35" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DbSet&lt;Author&gt; Authors { get; set; }</Member>
        <Member type="Property">public DbSet&lt;Member&gt; Members { get; set; }</Member>
        <Member type="Property">public DbSet&lt;Book&gt; Books { get; set; }</Member>
        <Member type="Method">protected override void OnModelCreating(DbModelBuilder dbModelBuilder)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UserService</Name>
        <Access>Public</Access>
        <Location left="1552" top="33" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static UserService instance</Member>
        <Member type="Field">Dictionary&lt;string, Member&gt; LoggedInMembers</Member>
        <Member type="Constructor">private UserService()</Member>
        <Member type="Method">public static UserService GetInstance()</Member>
        <Member type="Method">public Member GetLoggedInUser(string token)</Member>
        <Member type="Method">public bool IsMemberLoggedIn(string token)</Member>
        <Member type="Method">public string LoginUser(string username, string password)</Member>
        <Member type="Method">public void LogoutUser()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Command</Name>
        <Access>Public</Access>
        <Location left="42" top="321" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Action callback</Member>
        <Member type="Field">Func&lt;bool&gt; canExecuteMethod</Member>
        <Member type="Event">public event EventHandler CanExecuteChanged</Member>
        <Member type="Constructor">public Command(Action callbackFunc, Func&lt;bool&gt; canExecute = null)</Member>
        <Member type="Method">public void RaiseCanExecuteChanged()</Member>
        <Member type="Method">public bool CanExecute(object parameter)</Member>
        <Member type="Method">public void Execute(object parameter)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Command&lt;T&gt;</Name>
        <Access>Public</Access>
        <Location left="232" top="324" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Action&lt;T&gt; callback</Member>
        <Member type="Field">Func&lt;bool&gt; canExecuteMethod</Member>
        <Member type="Event">public event EventHandler CanExecuteChanged</Member>
        <Member type="Constructor">public Command(Action&lt;T&gt; callbackFunc, Func&lt;bool&gt; canExecute = null)</Member>
        <Member type="Method">public void RaiseCanExecuteChanged()</Member>
        <Member type="Method">public bool CanExecute(object parameter)</Member>
        <Member type="Method">public void Execute(object parameter)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RevertableCommand</Name>
        <Access>Public</Access>
        <Location left="42" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Action revert</Member>
        <Member type="Constructor">public RevertableCommand(Action executeFunc, Action revertFunc)</Member>
        <Member type="Method">public void Revert()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICommand</Name>
        <Access>Public</Access>
        <Location left="432" top="324" />
        <Size width="162" height="64" />
        <Collapsed>False</Collapsed>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="1" second="0">
        <Label>wrote</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <StartRole>Author</StartRole>
        <EndRole>Book</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="2" second="0">
        <Label>rents</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <StartRole>Member</StartRole>
        <EndRole>Books</EndRole>
        <StartMultiplicity>0..1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="6" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="3" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="3" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="3" second="7">
        <Label>uses</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartRole>BookstoreServiceInstance</StartRole>
        <EndRole>userService</EndRole>
        <StartMultiplicity>1..*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="10" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>121</X>
          <Y>564</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="9" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="8" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>126</X>
          <Y>281</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>